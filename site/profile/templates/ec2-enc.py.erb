#!/usr/bin/python

# ec2-enc.py
# A simple Puppet ENC that converts EC2 Security Groups to Puppet classes

import boto.ec2
import sys

# EC2Group: Puppet Class
#GROUPS = {'default': 'role::default', 'web': 'role::web', 'app': 'role::app'}
GROUPS = {'ccproject-puppet': 'role::puppet::master'}

conn = boto.ec2.connect_to_region( "us-east-1",
  aws_access_key_id='<%= scope.function_hiera(['aws::accessKeyId']) %>',
  aws_secret_access_key='<%= scope.function_hiera(['aws::secretAccessKey']) %>' )

for r in conn.get_all_instances():
  for i in r.instances:
    if i.public_dns_name:
      #print "public: %s\tprivate: %s" % (i.public_dns_name, i.private_dns_name)
      if i.private_dns_name.lower() ==  sys.argv[1].lower():
        # print "match! " + str(i.groups[0].name)
        print "classes:\n  %s:" % (GROUPS[i.groups[0].name])
